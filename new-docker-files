 #Eshcul cat Dockerfile 
# Build stage
FROM node:18 AS builder

WORKDIR /app

# Copy dependency files and install
COPY package.json package-lock.json ./
RUN npm install

# Copy the rest of the source
COPY . .

# Expo export (works for bundlers other than Webpack)
RUN npx expo export

# Serve with Nginx
FROM nginx:alpine
COPY --from=builder /app/dist /usr/share/nginx/html

EXPOSE 8081
CMD ["nginx", "-g", "daemon off;"]

-------------------------------------------------------- 
#sphere-entry-animated-home-main cat Dockerfile 
FROM node:18 AS build
WORKDIR /app

COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build  # builds into /app/dist

FROM nginx:alpine
COPY --from=build /app/dist /usr/share/nginx/html

RUN echo 'server { \
    listen 80; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { try_files $uri /index.html; } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]

------------------------------------------------------------------- 
# backend cat Dockerfile 
FROM node:18

WORKDIR /app

COPY package*.json ./
RUN npm install

COPY . .

EXPOSE 5000
CMD ["node", "index.js"]


--------------------------------------------------------------------- 
# ZaltixSchool  docker-compose.yml 
services:
  backend:
    build: ./backend
    container_name: zaltixschool-backend
    ports:
      - "5000:5000"

  eshcul:
    build: ./Eshcul
    container_name: zaltixschool-eshcul
    ports:
      - "8081:80"

  web:
    build: ./sphere-entry-animated-home-main
    container_name: zaltixschool-sphere
    ports:
      - "8083:80"



